name: Terraform Deploy

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: Terraform Workflow
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Export ARM environment variables
        run: |
          echo "ARM_CLIENT_ID=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r .clientId)" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r .clientSecret)" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r .subscriptionId)" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r .tenantId)" >> $GITHUB_ENV

      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Fetch secrets from Key Vault
        run: |
          KEYVAULT_NAME="dev-kv-WcuDo123"

          SUBSCRIPTION_ID=$(az keyvault secret show --vault-name $KEYVAULT_NAME --name subscription-id --query value -o tsv)
          TENANT_ID=$(az keyvault secret show --vault-name $KEYVAULT_NAME --name tenant-id --query value -o tsv)
          RESOURCE_GROUP_NAME=$(az keyvault secret show --vault-name $KEYVAULT_NAME --name resource-group-name --query value -o tsv)
          LOCATION=$(az keyvault secret show --vault-name $KEYVAULT_NAME --name location --query value -o tsv)
          ACR_NAME=$(az keyvault secret show --vault-name $KEYVAULT_NAME --name acr-name --query value -o tsv)
          PREFIX=$(az keyvault secret show --vault-name $KEYVAULT_NAME --name prefix --query value -o tsv)
          PYTHON_IMAGE_NAME=$(az keyvault secret show --vault-name $KEYVAULT_NAME --name python-image-name --query value -o tsv)
          SPRING_IMAGE_NAME=$(az keyvault secret show --vault-name $KEYVAULT_NAME --name spring-image-name --query value -o tsv)
          PYTHON_APP_NAME=$(az keyvault secret show --vault-name $KEYVAULT_NAME --name python-app-name --query value -o tsv)
          SPRING_APP_NAME=$(az keyvault secret show --vault-name $KEYVAULT_NAME --name spring-app-name --query value -o tsv)
          PYTHON_PORT=$(az keyvault secret show --vault-name $KEYVAULT_NAME --name python-port --query value -o tsv)
          SPRING_PORT=$(az keyvault secret show --vault-name $KEYVAULT_NAME --name spring-port --query value -o tsv)
          ACR_USERNAME=$(az keyvault secret show --vault-name $KEYVAULT_NAME --name acr-username --query value -o tsv)
          ACR_PASSWORD=$(az keyvault secret show --vault-name $KEYVAULT_NAME --name acr-password --query value -o tsv)

          cat <<EOF > terraform.tfvars
          subscription_id = "${SUBSCRIPTION_ID}"
          tenant_id = "${TENANT_ID}"
          resource_group_name = "${RESOURCE_GROUP_NAME}"
          location = "${LOCATION}"
          acr_name = "${ACR_NAME}"
          prefix = "${PREFIX}"
          python_image_name = "${PYTHON_IMAGE_NAME}"
          spring_image_name = "${SPRING_IMAGE_NAME}"
          python_app_name = "${PYTHON_APP_NAME}"
          spring_app_name = "${SPRING_APP_NAME}"
          python_port = "${PYTHON_PORT}"
          spring_port = "${SPRING_PORT}"
          acr_username = "${ACR_USERNAME}"
          acr_password = "${ACR_PASSWORD}"
          EOF

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Run Terraform Linter
        uses: terraform-linters/tflint-action@v0.43.1

      - name: Terraform Plan
        run: terraform plan -out=plan.tfplan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve plan.tfplan